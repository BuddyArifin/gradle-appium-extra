group 'gradle-appium-extra'
version '1.0-SNAPSHOT'

import groovyx.gpars.GParsPool;

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'groovy'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'io.qameta.allure:allure-gradle:2.5'
        classpath 'org.codehaus.gpars:gpars:1.2.1'
    }
}
apply plugin: 'io.qameta.allure'

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile 'io.appium:java-client:3.3.0'
    compile 'com.google.code.gson:gson:2.7'
    compile 'org.seleniumhq.selenium:selenium-server:2.52.0'
    compile 'org.apache.httpcomponents:httpclient:4.5.2'
    compile 'org.hamcrest:hamcrest-all:1.3'
    compile 'commons-net:commons-net:3.3'
    compile 'org.json:json:20160212'
    compile 'org.testng:testng:6.9.10'
    compile 'log4j:log4j:1.2.17'
    compile 'org.slf4j:slf4j-api:1.7.21'
    compile 'org.slf4j:slf4j-simple:1.7.21'
    compile 'io.qameta.allure:allure-testng:2.10.0'
    compile 'info.cukes:cucumber-testng:1.2.5'
    compile 'info.cukes:cucumber-java:1.2.5'
    compile 'info.cukes:cucumber-testng:1.2.5'
}

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

task runInParallel {
    dependsOn assemble, compileTestJava
    doLast {
        parallelTask()
    }
}

task runInSequence {
    dependsOn assemble, compileTestJava
    doLast {
        singleRun()
    }
}

def singleRun() {
    javaexec {
        main = "cucumber.api.cli.Main"
        classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
        args = ['--plugin', 'pretty', '--glue', 'com.gembira', "${project.projectDir}/src/test/java/com/gembira/features"]
    }
}

def parallelTask(tag = '~@default') {
    def features = fileTree(dir: "${project.projectDir}/src/test/java/com/gembira/features").include '**/*.feature'

    GParsPool.withPool(3) {
        features.eachParallel { File file ->
            println("execute ${file.name}")
            exec {
                executable "sh"
                args "-c", "java -cp  $sourceSets.main.runtimeClasspath.asPath " +
                        "cucumber.api.cli.Main " +
                        "--glue com.gembira " +
                        "${project.projectDir}/src/test/java/com/gembira/features/${file.name} " +
                        "--tags ${tag}"
            }
        }
    }
}

allure {
    version = "${allureVersion}"
    autoconfigure = false
    aspectjweaver = true
    
    resultsDir = file("$buildDir/allure-results")
    reportDir = file("$buildDir/allure-report")

    clean = true

    useTestNG {
        version = '2.0-BETA12'
    }
}

test {
    testLogging {
        showStandardStreams true
        exceptionFormat "short"

        info {
            events "started", "skipped", "failed"
            exceptionFormat "short"
        }
    }
    description = "Running Test from suite TestNG xml"
    useTestNG {
        suites "src/test/resources/testng.xml"
    }
}

clean {
    delete "$projectDir/Screenshots"
}